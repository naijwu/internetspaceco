[{"C:\\Projects\\internetspaceco\\src\\index.js":"1","C:\\Projects\\internetspaceco\\src\\App.js":"2","C:\\Projects\\internetspaceco\\src\\reportWebVitals.js":"3","C:\\Projects\\internetspaceco\\src\\Main.js":"4","C:\\Projects\\internetspaceco\\src\\Profile.js":"5","C:\\Projects\\internetspaceco\\src\\UpdateProfile.js":"6","C:\\Projects\\internetspaceco\\src\\Login.js":"7","C:\\Projects\\internetspaceco\\src\\ForgotPass.js":"8","C:\\Projects\\internetspaceco\\src\\Register.js":"9","C:\\Projects\\internetspaceco\\src\\Preview.js":"10","C:\\Projects\\internetspaceco\\src\\contexts\\AuthContext.js":"11","C:\\Projects\\internetspaceco\\src\\firebase.js":"12","C:\\Projects\\internetspaceco\\src\\Editor.js":"13","C:\\Projects\\internetspaceco\\src\\components\\WebsiteItem.js":"14","C:\\Projects\\internetspaceco\\src\\components\\WebsiteLink.js":"15","C:\\Projects\\internetspaceco\\src\\components\\SocialLink.js":"16","C:\\Projects\\internetspaceco\\src\\components\\SocialItem.js":"17"},{"size":540,"mtime":1637919064605,"results":"18","hashOfConfig":"19"},{"size":1369,"mtime":1637919064490,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1637919064621,"results":"21","hashOfConfig":"19"},{"size":25721,"mtime":1637919064562,"results":"22","hashOfConfig":"19"},{"size":5892,"mtime":1638142250358,"results":"23","hashOfConfig":"19"},{"size":2752,"mtime":1637966090920,"results":"24","hashOfConfig":"19"},{"size":2245,"mtime":1637919064505,"results":"25","hashOfConfig":"19"},{"size":1892,"mtime":1637919064467,"results":"26","hashOfConfig":"19"},{"size":3218,"mtime":1637919064524,"results":"27","hashOfConfig":"19"},{"size":8419,"mtime":1638147133604,"results":"28","hashOfConfig":"19"},{"size":1850,"mtime":1637919064935,"results":"29","hashOfConfig":"19"},{"size":1081,"mtime":1638146908712,"results":"30","hashOfConfig":"19"},{"size":33761,"mtime":1638159204595,"results":"31","hashOfConfig":"19"},{"size":2810,"mtime":1638147916370,"results":"32","hashOfConfig":"19"},{"size":634,"mtime":1638157768103,"results":"33","hashOfConfig":"19"},{"size":3762,"mtime":1638157769991,"results":"34","hashOfConfig":"19"},{"size":2293,"mtime":1638147118316,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"hl06nq",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Projects\\internetspaceco\\src\\index.js",[],["76","77"],"C:\\Projects\\internetspaceco\\src\\App.js",["78","79"],"import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\n\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\n\nimport Main from './Main';\nimport Profile from './Profile';\nimport Register from './Register';\nimport Login from './Login';\nimport ForgotPass from './ForgotPass';\nimport UpdateProfile from './UpdateProfile';\nimport Preview from './Preview';\n\n\nfunction AuthRoute({ component: Component, ...rest }) {\n  const { currentUser } = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        currentUser ? ( \n          <Component {...props} />\n        ) : ( \n          <Redirect to='/app/login' />\n        )\n      }\n    />\n  );\n}\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Switch>\n        <Route exact path='/' component={Main} />\n        <Route exact path='/:user_name' component={Profile} />\n        <Route exact path='/app/register' component={Register} />\n        <Route exact path='/app/login' component={Login} />\n        <Route exact path='/app/forgot' component={ForgotPass} />\n        <AuthRoute exact path='/app/update' component={UpdateProfile} />\n        <AuthRoute exact path='/app/preview' component={Preview} />\n        {/* <AuthRoute exact path='/edit/:user_name' component={} /> */}\n      </Switch>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","C:\\Projects\\internetspaceco\\src\\reportWebVitals.js",[],"C:\\Projects\\internetspaceco\\src\\Main.js",["80"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from './contexts/AuthContext';\r\nimport { database } from './firebase';\r\n\r\nimport './landing.css';\r\n\r\nimport InstagramIcon from './icons/instagram.svg';\r\nimport GithubIcon from './icons/github.svg';\r\nimport MailIcon from './icons/mail.svg';\r\nimport FacebookIcon from './icons/facebook.svg';\r\nimport TwitterIcon from './icons/twitter.svg';\r\nimport TwitchIcon from './icons/twitch.svg';\r\nimport CodepenIcon from './icons/codepen.svg';\r\nimport FigmaIcon from './icons/figma.svg';\r\nimport GitlabIcon from './icons/gitlab.svg';\r\nimport LinkedinIcon from './icons/linkedin.svg';\r\nimport TrelloIcon from './icons/trello.svg';\r\nimport YoutubeIcon from './icons/youtube.svg';\r\n\r\n// const socialOptions = [\r\n//     \"instagram\",\r\n//     \"github\",\r\n//     \"email\",\r\n//     \"facebook\",\r\n//     \"twitter\",\r\n//     \"twitch\",\r\n//     \"codepen\",\r\n//     \"figma\",\r\n//     \"gitlab\",\r\n//     \"linkedin\",\r\n//     \"trello\",\r\n//     \"youtube\"\r\n// ];\r\n\r\nconst Main = (props) => {\r\n\r\n    const { currentUser, loginUsingGoogle } = useAuth();\r\n\r\n    const [demoName, updateDemoName] = useState('Elon Musk');\r\n    const [demoBio, updateDemoBio] = useState('Martian');\r\n\r\n    // Elon musk sample data lmao - we love papa elon\r\n    const [websites, updateWebsites] = useState([]); // {img: 'img url', name: 'link name', link: '',}\r\n    const [socials, updateSocials] = useState([]);\r\n\r\n    const [pfpURL, updatePfpURL] = useState('https://thumbor.forbes.com/thumbor/fit-in/416x416/filters%3Aformat%28jpg%29/https%3A%2F%2Fspecials-images.forbesimg.com%2Fimageserve%2F5f47d4de7637290765bce495%2F0x0.jpg%3Fbackground%3D000000%26cropX1%3D1398%26cropX2%3D3908%26cropY1%3D594%26cropY2%3D3102');\r\n    const [bgpURL, updateBgpURL] = useState('https://cimg3.ibsrv.net/ibimg/hgm/1024x576-1/100/669/2020-tesla-roadster-at-2018-grand-basel-show--image-via-bluewin_100669019.jpg');\r\n\r\n    // const to manage adding social icons (messy... unoptimized.... :( )\r\n    const [displaySocialOne, updateDisplaySocialOne] = useState(true);\r\n    const [socialOne, updateSocialOne] = useState('http://twitter.com/elonmusk');\r\n    const [displaySocialTwo, updateDisplaySocialTwo] = useState(false);\r\n    const [socialTwo, updateSocialTwo] = useState('http://instagram.com/elonmusk');\r\n    const [displaySocialThree, updateDisplaySocialThree] = useState(false);\r\n    const [socialThree, updateSocialThree] = useState('');\r\n    const [displaySocialFour, updateDisplaySocialFour] = useState(false);\r\n    const [socialFour, updateSocialFour] = useState('');\r\n    const [displaySocialFive, updateDisplaySocialFive] = useState(false);\r\n    const [socialFive, updateSocialFive] = useState('');\r\n\r\n    const returnSocialType = (link) => {\r\n        if (link.indexOf('instagram') > -1) {\r\n            return 'instagram';\r\n        } else if (link.indexOf('github') > -1) {\r\n            return 'github';\r\n        } else if (link.indexOf('@') > -1) {\r\n            return 'email';\r\n        } else if (link.indexOf('facebook') > -1) {\r\n            return 'facebook';\r\n        } else if (link.indexOf('linkedin') > -1) {\r\n            return 'linkedin';\r\n        } else if (link.indexOf('twitter') > -1) {\r\n            return 'twitter';\r\n        } else if (link.indexOf('twitch') > -1) {\r\n            return 'twitch';\r\n        } else if (link.indexOf('codepen') > -1) {\r\n            return 'codepen';\r\n        } else if (link.indexOf('figma') > -1) {\r\n            return 'figma';\r\n        } else if (link.indexOf('gitlab') > -1) {\r\n            return 'gitlab';\r\n        } else if (link.indexOf('trello') > -1) {\r\n            return 'trello';\r\n        } else if (link.indexOf('youtube') > -1) {\r\n            return 'youtube';\r\n        } else {\r\n            return 'default';\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(socialOne) {\r\n            updateDisplaySocialOne(true);\r\n        }\r\n        if((socialOne) || (socialTwo)) {\r\n            updateDisplaySocialTwo(true);\r\n        } else if (!(socialOne)) {\r\n            updateDisplaySocialTwo(false);\r\n        }\r\n        if((socialTwo) || (socialThree)) {\r\n            updateDisplaySocialThree(true);\r\n        } else if (!(socialTwo)) {\r\n            updateDisplaySocialThree(false);\r\n        }\r\n        if((socialThree) || socialFour) {\r\n            updateDisplaySocialFour(true);\r\n        } else if (!(socialThree)) {\r\n            updateDisplaySocialFour(false);\r\n        }\r\n        if((socialFour) || socialFive) {\r\n            updateDisplaySocialFive(true);\r\n        } else if (!(socialFour)) {\r\n            updateDisplaySocialFive(false);\r\n        }\r\n    }, [socialOne, socialTwo, socialThree, socialFour, socialFive]);\r\n\r\n    useEffect(() => {\r\n        let type = returnSocialType(socialOne);\r\n        let link = socialOne;\r\n        let array = socials;\r\n        array[0] = {\r\n            type: type,\r\n            link: link,\r\n            // actualLink for emails\r\n        }\r\n        updateSocials(array);\r\n    }, [socialOne, socials]);\r\n    \r\n    useEffect(() => {\r\n        let type = returnSocialType(socialTwo);\r\n        let link = socialTwo;\r\n        let array = socials;\r\n        array[1] = {\r\n            type: type,\r\n            link: link,\r\n        }\r\n        updateSocials(array);\r\n    }, [socialTwo, socials])\r\n    \r\n    useEffect(() => {\r\n        let type = returnSocialType(socialThree);\r\n        let link = socialThree;\r\n        let array = socials;\r\n        array[2] = {\r\n            type: type,\r\n            link: link,\r\n        }\r\n        updateSocials(array);\r\n    }, [socialThree, socials])\r\n    \r\n    useEffect(() => {\r\n        let type = returnSocialType(socialFour);\r\n        let link = socialFour;\r\n        let array = socials;\r\n        array[3] = {\r\n            type: type,\r\n            link: link,\r\n        }\r\n        updateSocials(array);\r\n    }, [socialFour, socials])\r\n    \r\n    useEffect(() => {\r\n        let type = returnSocialType(socialFive);\r\n        let link = socialFive;\r\n        let array = socials;\r\n        array[4] = {\r\n            type: type,\r\n            link: link,\r\n        }\r\n        updateSocials(array);\r\n    }, [socialFive, socials])\r\n\r\n\r\n    const displaySocials = () => {\r\n        let returnData = [];\r\n\r\n        socials.forEach((item) => {\r\n            let icon = '';\r\n\r\n            switch(item.type) {\r\n                case 'instagram':\r\n                    icon = InstagramIcon;\r\n                    break;\r\n                case 'github':\r\n                    icon = GithubIcon;\r\n                    break;\r\n                case 'email':\r\n                    icon = MailIcon;\r\n                    break;\r\n                case 'facebook':\r\n                    icon = FacebookIcon;\r\n                    break;\r\n                case 'twitter':\r\n                    icon = TwitterIcon;\r\n                    break;\r\n                case 'twitch':\r\n                    icon = TwitchIcon;\r\n                    break;\r\n                case 'codepen':\r\n                    icon = CodepenIcon;\r\n                    break;\r\n                case 'figma':\r\n                    icon = FigmaIcon;\r\n                    break;\r\n                case 'gitlab':\r\n                    icon = GitlabIcon;\r\n                    break;\r\n                case 'linkedin':\r\n                    icon = LinkedinIcon;\r\n                    break;\r\n                case 'trello':\r\n                    icon = TrelloIcon;\r\n                    break;\r\n                case 'youtube':\r\n                    icon = YoutubeIcon;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            if (icon) {\r\n                returnData.push(\r\n                    <a target=\"_blank\" rel=\"noreferrer\" href={`${item.link}`} className={`icon ${item.type}`}>\r\n                        <img src={icon} alt={item.type} />\r\n                    </a>\r\n                );\r\n            }\r\n        });\r\n\r\n        return returnData;\r\n    }\r\n\r\n    const [displayWebsiteOne, updateDisplayWebsiteOne] = useState(true);\r\n    const [websiteOneName, updateWebsiteOneName] = useState('Electric Toys');\r\n    const [websiteOneLink, updateWebsiteOneLink] = useState('http://tesla.com');\r\n    \r\n    const [displayWebsiteTwo, updateDisplayWebsiteTwo] = useState(false);\r\n    const [websiteTwoName, updateWebsiteTwoName] = useState('Mars Mission');\r\n    const [websiteTwoLink, updateWebsiteTwoLink] = useState('http://spacex.com');\r\n    \r\n    const [displayWebsiteThree, updateDisplayWebsiteThree] = useState(false);\r\n    const [websiteThreeName, updateWebsiteThreeName] = useState('Tunnels?');\r\n    const [websiteThreeLink, updateWebsiteThreeLink] = useState('http://boringcompany.com');\r\n    \r\n    const [displayWebsiteFour, updateDisplayWebsiteFour] = useState(false);\r\n    const [websiteFourName, updateWebsiteFourName] = useState('');\r\n    const [websiteFourLink, updateWebsiteFourLink] = useState('');\r\n    \r\n    const [displayWebsiteFive, updateDisplayWebsiteFive] = useState(false);\r\n    const [websiteFiveName, updateWebsiteFiveName] = useState('');\r\n    const [websiteFiveLink, updateWebsiteFiveLink] = useState('');\r\n\r\n    useEffect(() => {\r\n        if((websiteOneLink && websiteOneName) || (websiteTwoName) || (websiteTwoLink)) {\r\n            updateDisplayWebsiteTwo(true);\r\n        } else if (!(websiteTwoLink || websiteTwoName)) {\r\n            updateDisplayWebsiteTwo(false);\r\n        }\r\n        if((websiteTwoLink && websiteTwoName) || websiteThreeName || websiteThreeLink) {\r\n            updateDisplayWebsiteThree(true);\r\n        } else if (!(websiteThreeLink || websiteThreeName)) {\r\n            updateDisplayWebsiteThree(false);\r\n        }\r\n        if((websiteThreeLink && websiteThreeName) || websiteFourName || websiteFourLink) {\r\n            updateDisplayWebsiteFour(true);\r\n        } else if (!(websiteFourLink || websiteFourName)) {\r\n            updateDisplayWebsiteFour(false);\r\n        }\r\n        if((websiteFourLink && websiteFourName) || websiteFiveName || websiteFiveLink) {\r\n            updateDisplayWebsiteFive(true);\r\n        } else if (!(websiteFiveLink || websiteFiveName)) {\r\n            updateDisplayWebsiteFive(false);\r\n        }\r\n    }, [websiteOneName, websiteOneLink, websiteTwoName, websiteTwoLink, websiteThreeName, websiteThreeLink, websiteFourName, websiteFourLink, websiteFiveName, websiteFiveLink]);\r\n\r\n    useEffect(() => {\r\n        let name = websiteOneName;\r\n        let link = websiteOneLink;\r\n        let array = websites;\r\n        array[0] = {\r\n            img: '',\r\n            name: name,\r\n            link: link,\r\n        }\r\n        updateWebsites(array);\r\n    }, [websiteOneName, websiteOneLink, websites]);\r\n    \r\n    useEffect(() => {\r\n        let name = websiteTwoName;\r\n        let link = websiteTwoLink;\r\n        let array = websites;\r\n        array[1] = {\r\n            img: '',\r\n            name: name,\r\n            link: link,\r\n        }\r\n        updateWebsites(array);\r\n    }, [websiteTwoName, websiteTwoLink, websites])\r\n    \r\n    useEffect(() => {\r\n        let name = websiteThreeName;\r\n        let link = websiteThreeLink;\r\n        let array = websites;\r\n        array[2] = {\r\n            img: '',\r\n            name: name,\r\n            link: link,\r\n        }\r\n        updateWebsites(array);\r\n    }, [websiteThreeName, websiteThreeLink, websites])\r\n    \r\n    useEffect(() => {\r\n        let name = websiteFourName;\r\n        let link = websiteFourLink;\r\n        let array = websites;\r\n        array[3] = {\r\n            img: '',\r\n            name: name,\r\n            link: link,\r\n        }\r\n        updateWebsites(array);\r\n    }, [websiteFourName, websiteFourLink, websites])\r\n    \r\n    useEffect(() => {\r\n        let name = websiteFiveName;\r\n        let link = websiteFiveLink;\r\n        let array = websites;\r\n        array[4] = {\r\n            img: '',\r\n            name: name,\r\n            link: link,\r\n        }\r\n        updateWebsites(array);\r\n    }, [websiteFiveLink, websiteFiveName, websites])\r\n\r\n    const displayWebsite = () => {\r\n        let returnData = [];\r\n\r\n        websites.forEach((item) => {\r\n            if(item.name && item.link) {\r\n                returnData.push(\r\n                    <a target=\"_blank\" rel=\"noreferrer\" className='link-item' href={`${item.link}`}>\r\n                        {/* <img className='link-image' src={} /> /* perhaps send opengraph req */}\r\n                        {/* <div className='link-img'>{item.img}</div> */}\r\n                        <div className='link-content'>\r\n                            <div className='link-text'>{item.name}</div>\r\n                            <div className='link-url'>{item.link}</div>\r\n                        </div>\r\n                    </a>\r\n                );\r\n            }\r\n        })\r\n\r\n        return returnData;\r\n    }\r\n\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleGoogleLogin(e) {\r\n        e.preventDefault();\r\n        \r\n        try {\r\n            setError('');\r\n            setLoading(true);\r\n            const returnData = await loginUsingGoogle();\r\n\r\n            database.collection('users').doc(returnData.user.uid).get().then((doc) => {\r\n                // not the best method, but checking if they're a first time user (or effectively first time--but not effective to do this check every login)\r\n                if(doc.exists) {\r\n                    // is not a new user\r\n                    history.push('/app/preview');\r\n                    setLoading(false);\r\n                } else if (!doc.exists) {\r\n                    // is a new user\r\n                    \r\n                    database.collection(\"users\").doc(returnData.user.uid).set({\r\n                        pages: [],\r\n                    })\r\n                    .then(function() {\r\n                        console.log(\"Document successfully written!\");\r\n                    })\r\n                    .catch(function(error) {\r\n                        console.error(\"Error writing document: \", error);\r\n                        setError('Failed to create new record as first time registrant: ' + error);\r\n                    });\r\n\r\n                    setLoading(false);\r\n                    history.push('/app/preview');\r\n                }\r\n            }).then(function() {\r\n\r\n            }).catch(function(err) {\r\n                setError('Failed to communicate with server: ' + err);\r\n            });\r\n        } catch {\r\n            setError('Failed to log in');\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <header>\r\n                <div className='inner-container'>\r\n                    <h2>internetspace🌌co</h2>\r\n                </div>\r\n            </header>\r\n            <div className='introduction'>\r\n                <h1>Create your own space on the internet.</h1>\r\n            </div>\r\n            <div className='about'>\r\n                <h2>It's fun. Give it a try.</h2>\r\n                <div className='demo-container'>\r\n                    <div className={`profile-container ${((bgpURL && !pfpURL) ? 'bg-alone' : '') || ((pfpURL && !bgpURL) ? 'pf-alone' : '') || ((!pfpURL && !bgpURL) ? 'none' : '')}`}>\r\n                        <div className='profile'>\r\n                            <div className='photos'>\r\n                                <img className='bgp' src={bgpURL} alt=\"background\" />\r\n                                <img className='pfp' src={pfpURL} alt=\"profile\" />\r\n                            </div>\r\n                            <div className='info'>\r\n                                <h3>{demoName}</h3>\r\n                                <p>{demoBio}</p>\r\n                            </div>\r\n                            <div className='socials'>\r\n                                {socials && displaySocials()}\r\n                            </div>\r\n                            <div className='links'>\r\n                                {websites && displayWebsite()}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='engage'>\r\n                        <div className='input-section'>\r\n                            <div className='input-row'>\r\n                                <div className='input-box'>\r\n                                    <h4>BG Photo URL</h4>\r\n                                    <input type=\"text\" value={bgpURL} onChange={e=>updateBgpURL(e.target.value)} />\r\n                                </div>\r\n                                <div className='input-box'>\r\n                                    <h4>Profile Photo URL</h4>\r\n                                    <input type=\"text\" value={pfpURL} onChange={e=>updatePfpURL(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n                            <div className='input-row'>\r\n                                <div className='input-box'>\r\n                                    <h4>Name</h4>\r\n                                    <input type=\"text\" value={demoName} onChange={e=>updateDemoName(e.target.value)} />\r\n                                </div>\r\n                                <div className='input-box'>\r\n                                    <h4>Biography</h4>\r\n                                    <input type=\"text\" value={demoBio} onChange={e=>updateDemoBio(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='input-section'>\r\n                            <h4>Socials</h4>\r\n                            <p>\r\n                                Make sure to write 'http://' in front of all links!\r\n                            </p>\r\n                            <div className='input-box social'>\r\n                                {displaySocialOne && (\r\n                                    <div className='add-social'>\r\n                                        <h5>Link: </h5>\r\n                                        <input type=\"text\" value={socialOne} onChange={e=>updateSocialOne(e.target.value)} />\r\n                                    </div>\r\n                                )}\r\n                                {displaySocialTwo && (\r\n                                    <div className='add-social'>\r\n                                        <h5>Link: </h5>\r\n                                        <input type=\"text\" value={socialTwo} onChange={e=>updateSocialTwo(e.target.value)} />\r\n                                    </div>\r\n                                )}\r\n                                {displaySocialThree && (\r\n                                    <div className='add-social'>\r\n                                        <h5>Link: </h5>\r\n                                        <input type=\"text\" value={socialThree} onChange={e=>updateSocialThree(e.target.value)} />\r\n                                    </div>\r\n                                )}\r\n                                {displaySocialFour && (\r\n                                    <div className='add-social'>\r\n                                        <h5>Link: </h5>\r\n                                        <input type=\"text\" value={socialFour} onChange={e=>updateSocialFour(e.target.value)} />\r\n                                    </div>\r\n                                )}\r\n                                {displaySocialFive && (\r\n                                    <div className='add-social'>\r\n                                        <h5>Link: </h5>\r\n                                        <input type=\"text\" value={socialFive} onChange={e=>updateSocialFive(e.target.value)} />\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className='input-section'>\r\n                            <h4>Websites</h4>\r\n                            <div className='input-box websites'>\r\n                                {displayWebsiteOne && (\r\n                                    <div className='input-row'>\r\n                                        <div className='website-name'>\r\n                                            Title: \r\n                                            <input type=\"text\" value={websiteOneName} onChange={e=>updateWebsiteOneName(e.target.value)} />\r\n                                        </div>\r\n                                        <div className='website-link'>\r\n                                            Link: \r\n                                            <input type=\"text\" value={websiteOneLink} onChange={e=>updateWebsiteOneLink(e.target.value)} />\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                {displayWebsiteTwo && (\r\n                                    <div className='input-row'>\r\n                                        <div className='website-name'>\r\n                                            Title: \r\n                                            <input type=\"text\" value={websiteTwoName} onChange={e=>updateWebsiteTwoName(e.target.value)} />\r\n                                        </div>\r\n                                        <div className='website-link'>\r\n                                            Link: \r\n                                            <input type=\"text\" value={websiteTwoLink} onChange={e=>updateWebsiteTwoLink(e.target.value)} />\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                {displayWebsiteThree && (\r\n                                    <div className='input-row'>\r\n                                        <div className='website-name'>\r\n                                            Title: \r\n                                            <input type=\"text\" value={websiteThreeName} onChange={e=>updateWebsiteThreeName(e.target.value)} />\r\n                                        </div>\r\n                                        <div className='website-link'>\r\n                                            Link: \r\n                                            <input type=\"text\" value={websiteThreeLink} onChange={e=>updateWebsiteThreeLink(e.target.value)} />\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                {displayWebsiteFour && (\r\n                                    <div className='input-row'>\r\n                                        <div className='website-name'>\r\n                                            Title: \r\n                                            <input type=\"text\" value={websiteFourName} onChange={e=>updateWebsiteFourName(e.target.value)} />\r\n                                        </div>\r\n                                        <div className='website-link'>\r\n                                            Link: \r\n                                            <input type=\"text\" value={websiteFourLink} onChange={e=>updateWebsiteFourLink(e.target.value)} />\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                {displayWebsiteFive && (\r\n                                    <div className='input-row'>\r\n                                        <div className='website-name'>\r\n                                            Title: \r\n                                            <input type=\"text\" value={websiteFiveName} onChange={e=>updateWebsiteFiveName(e.target.value)} />\r\n                                        </div>\r\n                                        <div className='website-link'>\r\n                                            Link: \r\n                                            <input type=\"text\" value={websiteFiveLink} onChange={e=>updateWebsiteFiveLink(e.target.value)} />\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='lightscamera'>\r\n                {(!currentUser) ? (\r\n                    <>\r\n                        <h2>Ready? Get started!</h2>\r\n                        <div className='button-tray'>\r\n                            {/* <Link className='button green' to='/app/register'>\r\n                                Create an Account\r\n                            </Link>\r\n                            <Link className='button' to='/app/login'>\r\n                                Log In\r\n                            </Link> */}\r\n                        </div>\r\n                        <button disabled={loading} onClick={handleGoogleLogin} className='button google'>\r\n                            Log In Using Google\r\n                        </button>\r\n                        {(error) && (\r\n                            <div className='homepage-error'>\r\n                                {error}\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <h2>Go to dashboard!</h2>\r\n                        <Link className='button' to='/app/preview'>\r\n                            Click Here\r\n                        </Link>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main","C:\\Projects\\internetspaceco\\src\\Profile.js",["81"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { database } from './firebase';\r\nimport SocialLink from './components/SocialLink';\r\nimport WebsiteLink from './components/WebsiteLink';\r\n\r\n// TODO: Fix the issue that Firebase doesn't recognize :user_name\r\n// Immediate TODO: Fix up UI so I can actually navigate the site lol\r\n\r\nexport default function Profile() {\r\n\r\n    const params = useParams();\r\n\r\n    const [name, setName] = useState('');\r\n    const [bio, setBio] = useState('');\r\n\r\n    const [websites, setWebsites] = useState([]); // {img: 'img url', name: 'link name', link: '',}\r\n    const [socials, setSocials] = useState([]);\r\n\r\n    // TODO: Add support for profile pictures (at EDITOR side)\r\n    const [pfpURL, setPfpURL] = useState('');\r\n    const [cpURL, setCpURL] = useState(''); \r\n    const [bgpURL, setBgpURL] = useState('');\r\n\r\n    // OPTIONS baby\r\n    const [pageAlign, setPageAlign] = useState('');\r\n    const [cardOpacity, setCardOpacity] = useState(0);\r\n    const [cardBlur, setCardBlur] = useState(0);\r\n    const [colourBackground, setColourBackground] = useState('#FFFFFF');\r\n    const [colourCard, setColourCard] = useState('#FFFFFF');\r\n    const [colourBox, setColourBox] = useState('#FFFFFF');\r\n    const [colourText, setColourText] = useState('#000000');\r\n\r\n    // print params to console\r\n    console.log(params.user_name);\r\n\r\n    useEffect(() => {\r\n        database.collection('pages').doc(params.user_name).get().then((doc) => {\r\n            let profileData = doc.data();\r\n\r\n            if (!doc.exists) {\r\n                console.log(\"Page doesn't exist G\");\r\n            } else if (doc.exists) {\r\n                setName(profileData.data.name ? profileData.data.name : '');\r\n                setBio(profileData.data.biography ? profileData.data.biography : '');\r\n\r\n                setSocials(profileData.socialsData ? profileData.socialsData : {});\r\n                setWebsites(profileData.websitesData ? profileData.websitesData : {});\r\n\r\n                setPfpURL(profileData.images.profile ? profileData.images.profile : '');\r\n                setCpURL(profileData.images.cover ? profileData.images.cover : '');\r\n                setBgpURL(profileData.images.background ? profileData.images.background : '');\r\n                \r\n                setPageAlign(profileData.options.align ? profileData.options.align : '')\r\n                setColourBackground(profileData.options.colour_bg ? profileData.options.colour_bg : '')\r\n                setCardOpacity(profileData.options.card_opacity ? profileData.options.card_opacity : '')\r\n                setCardBlur(profileData.options.card_blur ? profileData.options.card_blur : '')\r\n                setColourCard(profileData.options.colour_card ? profileData.options.colour_card : '')\r\n                setColourBox(profileData.options.colour_box ? profileData.options.colour_box : '')\r\n                setColourText(profileData.options.colour_text ? profileData.options.colour_text : '')\r\n            } else {\r\n                console.log(\"Something went wrong\"); // TODO: Graphically show the errors\r\n            }\r\n        }).catch(function(error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n\r\n    }, [params]);\r\n\r\n    \r\n    const displaySocials = () => {\r\n        let returnData = [];\r\n\r\n        for (let item in socials) {\r\n            returnData.push(\r\n                <SocialLink\r\n                    key={item}\r\n                    url={socials[item]} />\r\n            )\r\n        }\r\n\r\n        return returnData;\r\n    }\r\n\r\n    const displayWebsite = () => {\r\n        let returnData = [];\r\n\r\n        for (let item in websites) {\r\n            if(websites[item].url && websites[item].title) {\r\n                returnData.push(\r\n                    <WebsiteLink\r\n                        colour={colourBox}\r\n                        key={item}\r\n                        id={item}\r\n                        url={websites[item].url}\r\n                        title={websites[item].title} />\r\n                );\r\n\r\n            }\r\n        }\r\n\r\n        return returnData;\r\n    }\r\n\r\n    const hexToBg = (hex, opacity) => {\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(result[2], 16)}, ${parseInt(result[3], 16)}, ${opacity}%`;\r\n    }\r\n\r\n    // TODO: Check if user is signed in; if signed in, check if UID matches UID of doc, if does, show option to edit \r\n\r\n    return (\r\n        <div \r\n          className={`profile-container-wrapper ${pageAlign} prod`} \r\n          style={{ background: bgpURL ? `center / cover no-repeat url(\"${bgpURL}\")` : colourBackground }}>\r\n            <div \r\n              className={`profile-container ${((cpURL && !pfpURL) ? 'bg-alone' : '') || ((pfpURL && !cpURL) ? 'pf-alone' : '') || ((!pfpURL && !cpURL) ? 'none' : '')}`}\r\n              style={{\r\n                color: colourText,\r\n                background: cpURL ? `${hexToBg(colourCard, cardOpacity)}` : 'transparent',\r\n                backdropFilter: cpURL ? `blur(${cardBlur}px)` : ''\r\n              }}>\r\n                <div className='profile'>\r\n                    <div className='photos'>\r\n                        <img className='bgp' src={cpURL} alt=\"cover\" />\r\n                        <img className='pfp' src={pfpURL} alt=\"profile\" />\r\n                    </div>\r\n                    <div className='info'>\r\n                        <h3>{name}</h3>\r\n                        <p>{bio}</p>\r\n                    </div>\r\n                    <div className='socials'>\r\n                        {socials && displaySocials()}\r\n                    </div>\r\n                    <div className='links'>\r\n                        {websites && displayWebsite()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Projects\\internetspaceco\\src\\UpdateProfile.js",[],"C:\\Projects\\internetspaceco\\src\\Login.js",["82"],"import React, { useEffect, useState } from 'react';\r\nimport { useAuth } from './contexts/AuthContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport default function Login() {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    \r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { login } = useAuth();\r\n\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true);\r\n            await login(email, password);\r\n            history.push('/app/preview');\r\n        } catch {\r\n            setError('Failed to log in');\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='account-component'>\r\n                <h1>Login</h1>\r\n                {error && (\r\n                    <div className='error-alert'>\r\n                        {error}\r\n                    </div>\r\n                )}\r\n                <div className='input-group'>\r\n                    <h3>Email</h3>\r\n                    <input type=\"text\" value={email} onChange={e=>setEmail(e.target.value)} />\r\n                </div>\r\n                <div className='input-group'>\r\n                    <h3>Password</h3>\r\n                    <input type=\"text\" value={password} onChange={e=>setPassword(e.target.value)} />\r\n                </div>\r\n                <div className='text-tray'>\r\n                    <Link className='text-link' to='/app/forgot' >\r\n                        Forgot password\r\n                    </Link>\r\n                    <Link className='text-link' to='/app/register' >\r\n                        Register instead\r\n                    </Link>\r\n                </div>\r\n                <div className='input-group'>\r\n                    <input disabled={loading} onClick={handleSubmit} type=\"submit\" value=\"Login\" />\r\n                </div>\r\n            </div>\r\n            <div className='account-component-back'>\r\n                <Link className='text-link back' to='/' >\r\n                    Return Home\r\n                </Link>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Projects\\internetspaceco\\src\\ForgotPass.js",[],"C:\\Projects\\internetspaceco\\src\\Register.js",["83"],"import React, { useState } from 'react';\r\nimport { useAuth } from './contexts/AuthContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { database } from './firebase';\r\n\r\nexport default function Register() {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    \r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const { register, currentUser } = useAuth();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if(!(password === confirmPassword)) {\r\n            return setError(\"Passwords do not match\");\r\n        }\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true);\r\n            let registeredUser = await register(email, password);\r\n\r\n            if(registeredUser.user) {\r\n\r\n                // create document with the account's UUID under users collection\r\n                // TODO: Insecure, maybe have a verification process via email\r\n                database.collection(\"users\").doc(registeredUser.user.uid).set({\r\n                    pages: [],\r\n                })\r\n                .then(function() {\r\n                    console.log(\"Document successfully written!\");\r\n                })\r\n                .catch(function(error) {\r\n                    console.error(\"Error writing document: \", error);\r\n                });\r\n            }\r\n\r\n\r\n            history.push('/app/login')\r\n        } catch {\r\n            setError('Failed to create an account');\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='account-component'>\r\n                <h1>Register</h1>\r\n                {error && (\r\n                    <div className='error-alert'>\r\n                        {error}\r\n                    </div>\r\n                )}\r\n                <div className='input-group'>\r\n                    <h3>Email</h3>\r\n                    <input type=\"text\" value={email} onChange={e=>setEmail(e.target.value)} />\r\n                </div>\r\n                <div className='input-group'>\r\n                    <h3>Password</h3>\r\n                    <input type=\"text\" value={password} onChange={e=>setPassword(e.target.value)} />\r\n                </div>\r\n                <div className='input-group'>\r\n                    <h3>Confirm Password</h3>\r\n                    <input type=\"text\" value={confirmPassword} onChange={e=>setConfirmPassword(e.target.value)} />\r\n                </div>\r\n                <div className='text-tray'>\r\n                    <Link className='text-link' to='/app/login' >\r\n                        Login Instead\r\n                    </Link>\r\n                </div>\r\n                <div className='input-group'>\r\n                    <input disabled={loading} onClick={handleSubmit} type=\"submit\" value=\"Register\" />\r\n                </div>\r\n            </div>\r\n            <div className='account-component-back'>\r\n                <Link className='text-link back' to='/' >\r\n                    Return Home\r\n                </Link>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Projects\\internetspaceco\\src\\Preview.js",[],"C:\\Projects\\internetspaceco\\src\\contexts\\AuthContext.js",[],"C:\\Projects\\internetspaceco\\src\\firebase.js",[],"C:\\Projects\\internetspaceco\\src\\Editor.js",["84","85"],"C:\\Projects\\internetspaceco\\src\\components\\WebsiteItem.js",[],"C:\\Projects\\internetspaceco\\src\\components\\WebsiteLink.js",[],"C:\\Projects\\internetspaceco\\src\\components\\SocialLink.js",[],"C:\\Projects\\internetspaceco\\src\\components\\SocialItem.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":2,"column":27,"nodeType":"92","messageId":"93","endLine":2,"endColumn":33},{"ruleId":"90","severity":1,"message":"94","line":2,"column":50,"nodeType":"92","messageId":"93","endLine":2,"endColumn":54},{"ruleId":"90","severity":1,"message":"95","line":234,"column":31,"nodeType":"92","messageId":"93","endLine":234,"endColumn":54},{"ruleId":"90","severity":1,"message":"94","line":2,"column":21,"nodeType":"92","messageId":"93","endLine":2,"endColumn":25},{"ruleId":"90","severity":1,"message":"96","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"97","line":17,"column":23,"nodeType":"92","messageId":"93","endLine":17,"endColumn":34},{"ruleId":"90","severity":1,"message":"94","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":14},{"ruleId":"98","severity":1,"message":"99","line":402,"column":8,"nodeType":"100","endLine":402,"endColumn":56,"suggestions":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'updateDisplayWebsiteOne' is assigned a value but never used.","'useEffect' is defined but never used.","'currentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'deleteSocial', 'deleteWebsite', 'getWebsiteTitle', 'getWebsiteUrl', 'moveSocial', 'moveWebsite', 'outlineSlider', 'setSocialUrl', 'setWebsiteTitle', and 'setWebsiteUrl'. Either include them or remove the dependency array.","ArrayExpression",["104"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [websites, socials, colourBox, trigger, outline, getWebsiteTitle, getWebsiteUrl, setWebsiteTitle, setWebsiteUrl, deleteWebsite, moveWebsite, outlineSlider, setSocialUrl, deleteSocial, moveSocial]",{"range":"107","text":"108"},[14516,14564],"[websites, socials, colourBox, trigger, outline, getWebsiteTitle, getWebsiteUrl, setWebsiteTitle, setWebsiteUrl, deleteWebsite, moveWebsite, outlineSlider, setSocialUrl, deleteSocial, moveSocial]"]